import java.util.HashMap;
import java.util.Map;

public class Inventory {
    private Map<String, Product> products;

    public Inventory() {
        this.products = new HashMap<>();
    }

    public void addProduct(Product product) {
        if (products.containsKey(product.getProductId())) {
            System.out.println("Product with ID " + product.getProductId() + " already exists.");
        } else {
            products.put(product.getProductId(), product);
            System.out.println("Product " + product.getProductName() + " added.");
        }
    }

    public void updateProduct(String productId, Integer quantity, Double price) {
        Product product = products.get(productId);
        if (product != null) {
            if (quantity != null) {
                product.setQuantity(quantity);
            }
            if (price != null) {
                product.setPrice(price);
            }
            System.out.println("Product " + productId + " updated.");
        } else {
            System.out.println("Product with ID " + productId + " does not exist.");
        }
    }

    public void deleteProduct(String productId) {
        if (products.containsKey(productId)) {
            products.remove(productId);
            System.out.println("Product " + productId + " deleted.");
        } else {
            System.out.println("Product with ID " + productId + " does not exist.");
        }
    }

    public void displayProducts() {
        for (Product product : products.values()) {
            System.out.println(product);
        }
    }

    public static void main(String[] args) {
        Inventory inventory = new Inventory();

        // Create some products
        Product p1 = new Product("001", "Laptop", 10, 799.99);
        Product p2 = new Product("002", "Smartphone", 50, 499.99);
        Product p3 = new Product("003", "Tablet", 30, 299.99);

        // Add products
        inventory.addProduct(p1);
        inventory.addProduct(p2);
        inventory.addProduct(p3);

        // Display all products
        System.out.println("Inventory:");
        inventory.displayProducts();

        // Update a product
        inventory.updateProduct("001", 8, 749.99);

        // Display all products after update
        System.out.println("Updated Inventory:");
        inventory.displayProducts();

        // Delete a product
        inventory.deleteProduct("002");

        // Display all products after deletion
        System.out.println("Inventory After Deletion:");
        inventory.displayProducts();
    }
}
