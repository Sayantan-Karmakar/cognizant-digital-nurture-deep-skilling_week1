Analysis
Time Complexity Comparison:

Bubble Sort:

Best Case: O(n) if the array is already sorted (with an optimized version that tracks swaps).
Average Case: O(n²)
Worst Case: O(n²)
Memory Usage: O(1) (in-place sorting)
Quick Sort:

Best Case: O(n log n) when the pivot divides the array into nearly equal halves.
Average Case: O(n log n)
Worst Case: O(n²) if the pivot choices are poor (e.g., always choosing the smallest or largest element as the pivot).
Memory Usage: O(log n) due to recursion stack space (if implemented with tail recursion optimization).